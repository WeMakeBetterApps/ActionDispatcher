buildscript {
    ext.kotlin_version = '0.12.1218'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations { providedCompile }

sourceSets.main.compileClasspath += configurations.providedCompile
sourceSets.test.compileClasspath += configurations.providedCompile
sourceSets.test.runtimeClasspath += configurations.providedCompile

version = '1.0.0-SNAPSHOT'

dependencies {
    providedCompile 'io.reactivex:rxjava:1.0.15'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.8.5'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

compileKotlin {
    kotlinOptions.includeRuntime = true
}

//task proguard(type: proguard.gradle.ProGuardTask) {
//    configuration 'proguard.txt'
//
//    injars 'build/libs/proguard-gradle-example.jar'
//    outjars 'build/libs/proguard-gradle-example.out.jar'
//}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

archivesBaseName = "actiondispatcher-java"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'ActionDispatcher'
                packaging 'jar'
                // optionally artifactId can be defined here
                artifactId = "actiondispatcher-java"
                description 'A persistent queue for synchronizing asynchronous tasks.'
                url 'https://github.com/WeMakeBetterApps/ActionDispatcher'

                scm {
                    connection 'scm:git:http://github.com/wemakebetterapps/actiondispatcher'
                    developerConnection 'scm:git:https://github.com/wemakebetterapps/actiondispatcher'
                    url 'http://github.com/wemakebetterapps/actiondispatcher'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'spierce7'
                        name 'Scott Pierce'
                        email 'scott@wemakebetterapps.com'
                    }
                }
            }
        }
    }
}